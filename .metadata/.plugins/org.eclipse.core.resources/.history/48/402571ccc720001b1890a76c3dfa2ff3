package com.elucidator.test;

/**
 * 
 * @author Administrator
 *
 *java中多态分为两大类：1、方法多态(方法的重写和重载) 2、对象多态(向上转型、向下转型（强转）)
 *重写发生在父类和子类，子类重写父类中的方法：所有都必须一致，方法体除外
 *重载发生类中的方法，方法名相同，参数个数、类型、返回值可以不同
 *向上转型：关键在于实际使用的是哪个子类，并且被调用方法是否被子类重写，若是，则调用子类重写方法
 *	主要用在参数统一化：一个类可接受所有子类实例
 *向下转型：将父类对象变成子类对象，需要强转，
 *	场景：父类想调用子类独有的方法
 */
public class StatusTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		
	}

}
class Father{
	public void print(){
		System.out.println("我是father");
	}
}
class son{
	public void print(){
		System.out.println("我是son");
	}
}
class daughter{
	public void print(){
		System.out.println("我是daughter");
	}
}
